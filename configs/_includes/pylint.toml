[tool.pylint.format]
max-line-length = {{ cookiecutter.line_length }}

[tool.pylint.MASTER]
extension-pkg-whitelist = ''
fail-under = '10.0'
ignore = '.git'
ignore-patterns = ''
#init-hook=
jobs = 0
limit-inference-results = 100
load-plugins = ''
persistent = 'yes'
suggestion-mode = 'yes'
unsafe-load-any-extension = 'no'

[tool.pylint."MESSAGES CONTROL"]
confidence = ''
# disable = ''
# enable = ''

[tool.pylint.REPORTS]
evaluation = '10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)'
#msg-template=
output-format = 'colorized'
reports = 'no'
score = 'yes'

[tool.pylint.REFACTORING]
max-nested-blocks = 5
never-returning-functions = 'sys.exit'

[tool.pylint.LOGGING]
# logging-format-style = 'new'
# logging-modules = 'logging'

[tool.pylint.SPELLING]
max-spelling-suggestions = 4
spelling-dict = ''
spelling-ignore-words = ''
spelling-private-dict-file = ''
spelling-store-unknown-words = 'no'

[tool.pylint.MISCELLANEOUS]
notes = '''FIXME,
      XXX,
      TODO
'''
#notes-rgx=

[tool.pylint.TYPECHECK]
contextmanager-decorators = 'contextlib.contextmanager'
generated-members = ''
ignore-mixin-members = 'yes'
ignore-none = 'yes'
ignore-on-opaque-inference = 'yes'
ignored-classes = 'optparse.Values,thread._local,_thread._local'
ignored-modules = ''
missing-member-hint = 'yes'
missing-member-hint-distance = 1
missing-member-max-choices = 1
signature-mutators = ''

[tool.pylint.VARIABLES]
additional-builtins = ''
allow-global-unused-variables = 'yes'
callbacks = '''cb_,
          _cb
'''
dummy-variables-rgx = '_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_'
ignored-argument-names = '_.*|^ignored_|^unused_'
init-import = 'no'
redefining-builtins-modules = 'six.moves,past.builtins,future.builtins,builtins,io'

[tool.pylint.FORMAT]
expected-line-ending-format = ''
ignore-long-lines = '^\s*(# )?<?https?://\S+>?$'
indent-after-paren = 4
indent-string = '    '
max-line-length = {{ cookiecutter.line_length }}
max-module-lines = 1000
single-line-class-stmt = 'no'
single-line-if-stmt = 'no'

[tool.pylint.SIMILARITIES]
ignore-comments = 'yes'
ignore-docstrings = 'yes'
ignore-imports = 'no'
min-similarity-lines = 4

[tool.pylint.BASIC]
argument-naming-style = 'snake_case'
#argument-rgx=
attr-naming-style = 'snake_case'
#attr-rgx=
bad-names = '''foo,
          bar,
          baz,
          toto,
          tutu,
          tata
'''
bad-names-rgxs = ''
class-attribute-naming-style = 'any'
#class-attribute-rgx=
class-naming-style = 'PascalCase'
#class-rgx=
const-naming-style = 'UPPER_CASE'
#const-rgx=
docstring-min-length = -1
function-naming-style = 'snake_case'
#function-rgx=
good-names = '''i,
           j,
           k,
           ex,
           Run,
           pk,
           fd,
           x,
           y,
           _
'''
good-names-rgxs = ''
include-naming-hint = 'no'
inlinevar-naming-style = 'any'
#inlinevar-rgx=
method-naming-style = 'snake_case'
#method-rgx=
module-naming-style = 'snake_case'
#module-rgx=
name-group = ''
no-docstring-rgx = '^_'
property-classes = 'abc.abstractproperty'
variable-naming-style = 'snake_case'
#variable-rgx=

[tool.pylint.STRING]
check-quote-consistency = 'no'
check-str-concat-over-line-jumps = 'no'

[tool.pylint.IMPORTS]
allow-any-import-level = ''
allow-wildcard-with-all = 'no'
analyse-fallback-blocks = 'no'
deprecated-modules = 'optparse,tkinter.tix'
ext-import-graph = ''
import-graph = ''
int-import-graph = ''
known-standard-library = ''
known-third-party = ''
referred-modules = ''

[tool.pylint.CLASSES]
defining-attr-methods = '''__init__,
                      __new__,
                      setUp,
                      __post_init__
'''
exclude-protected = '''_asdict,
                  _fields,
                  _replace,
                  _source,
                  _make
'''
valid-classmethod-first-arg = 'cls'
valid-metaclass-classmethod-first-arg = 'cls'

[tool.pylint.DESIGN]
max-args = 5
max-attributes = 7
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50
min-public-methods = 2

[tool.pylint.EXCEPTIONS]
overgeneral-exceptions = '''BaseException,
                       Exception
'''
